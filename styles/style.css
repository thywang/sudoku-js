/* constants */
:root {
    /* light mode */
    --font-color: #060607;
    --bg-color: white;
    --primary-color: #f8f9f9;
    --secondary-color: #c7ccd1;
    --hover-color: #e3e5e8;
    --selected-color: #9099a4; /* darker secondary-color */
    --icon-color: #23262a;
    --digit-color: #4f5660; /* darker selected-color */
    
    /* dark mode */
    --font-color-dark: #f1f3f3;
    --number-color-dark: #c5c7c9;
    --bg-color-dark: #2b303c;
    --primary-color-dark: #353c47;
    --secondary-color-dark: #58627c;
    --hover-color-dark: #3f4654;
    --selected-color-dark: #c5cad6;
    --icon-color-dark: #e3e4e8;
    --digit-color-dark: #f1f3f4;

    /* errors */
    --error-color: #f2283c;
}

/* main functionalities */
* {
    margin: 0 auto;
    padding: 0;
    box-sizing: border-box;
    border-spacing: 0;
}
  
button, .material-icons {
    cursor: pointer;
}

/* header styling */
.header {
    display: flex;
    justify-content: space-between;
    padding: 10px;
    color: var(--font-color);
    border-bottom: 1px var(--secondary-color) solid;
}

/* dark mode header */
.sudoku-solver.dark .header {
    background-color: var(--bg-color-dark);
    color: var(--font-color-dark);
    border-bottom: 1px var(--secondary-color-dark) solid;
}

#title {
    flex-basis: 60%;
}

@media only screen and (min-width: 768px) {
    .settings {
        display: flex;
        justify-content: space-between;
        width: 10%;
    }
}

/* game menu styling */
.game-menu {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    margin: 10px;
}

.game-buttons {
    display: flex;
    flex-grow: 1;
    align-items: center;
    margin: 10px;
    cursor: pointer;
}

@media only screen and (min-width: 768px) {
    .game-buttons {
        flex-grow: 0.1;
    }
}

/* music */
#music::before {
    content: "music_off";
    color: var(--icon-color);
}

#music.material-icons.play-bgm::before {
    content: "music_note";
}

/* dark mode music button */
.sudoku-solver.dark #music::before {
    color: var(--icon-color-dark);
}

.difficulty-level {
    display: flex;
}

/* mistakes made */
#error-count {
    display: flex;
    /* text */
    font-size: 16px;
    color: var(--font-color);
}

@media only screen and (min-width: 768px) {
    #error-count {
        flex-grow: 0.5;
        justify-content: center;
        /* text */
        font-size: 18px;
    }
}

/* dark mode error count */
.sudoku-solver.dark #error-count {
    color: var(--font-color-dark);
}

.timer-and-pause-button {
    width: 80px;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

@media only screen and (min-width: 768px) {
    .timer-and-pause-button {
        width: 100px;
    }
}

.timer {
    /* text */
    color: var(--selected-color);
    font-size: 20px;
    text-align: center;
}

/* dark mode timer */
.sudoku-solver.dark .timer {
    color: var(--selected-color-dark);
}

/* board styling */
.sudoku-board {
    width: 360px;
    height: 360px;
    margin: 20px auto 10px auto;
    cursor: default;

    /* create rows and cols */
    display: flex;
    flex-wrap: wrap;
}

.square {
    width: 40px; /* 9 squares fit in row */
    height: 40px; /* 9 squares fit in col */
    border: 0.2px var(--selected-color) solid;

    /* text */
    color: var(--font-color);
    font-size: 20px;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
}

@media only screen and (min-width: 768px) {
    /* board styling */
    .sudoku-board {
        width: 450px;
        height: 450px;
    }

    .square {
        width: 50px; /* 9 squares fit in row */
        height: 50px; /* 9 squares fit in col */
        border: 0.5px var(--selected-color) solid;
    }
}

/* dark mode square */
.sudoku-solver.dark .square {
    color: var(--number-color-dark);
    border-color: var(--icon-color-dark);
}

/* error made on the board */
.sudoku-solver.dark .error {
    color: var(--error-color);
}

/* top right bottom left */
.thicker-border-right {
    border-right: 2px var(--icon-color) solid;
}
.thicker-border-below {
    border-bottom: 2px var(--icon-color) solid;
}

/* dark mode thicker borders */
.sudoku-solver.dark .thicker-border-right {
    border-right-color: var(--icon-color-dark);
}
.sudoku-solver.dark .thicker-border-below {
    border-bottom-color: var(--icon-color-dark);
}

.prefilled {
    background-color: var(--primary-color);
}
/* dark mode prefilled */
.sudoku-solver.dark .prefilled {
    background-color: var(--primary-color-dark) ;
}

.square-selected {
    background-color: var(--secondary-color);
}
/* dark mode selected square */
.sudoku-solver.dark .square-selected {
    background-color: var(--secondary-color-dark);
}

/* digits styling */
.digits {
    width: 360px;
    height: 40px;

    display: flex;
    flex-wrap: wrap;
}

.digit {
    width: 40px;
    height: 40px;
    margin: 0px;
    cursor: pointer;

    /* text */
    font-size: 30px;
    color: var(--digit-color);
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0.6;
}

@media only screen and (min-width: 768px) {
    .digits {
        width: 450px;
        height: 50px;
    }
    
    .digit {
        width: 50px;
        height: 50px;
    }
}

/* dark mode digit */
.sudoku-solver.dark .digit {
    color: var(--digit-color-dark);
}

@media (hover: hover) {
    .digit {
        transition: 0.3s;
    }
    .digit:hover {
        opacity: 1;
    }
}

.digit-selected {
    opacity: 1;
    background-color: var(--hover-color);
}
/* dark mode selected digit */
.sudoku-solver.dark .digit-selected {
    background-color: var(--hover-color-dark);
}

/* additional features */
.hide {
    display: none;
}

/* error made on the board */
.error {
    color: var(--error-color);
}

/* pause resume button */
#pause-resume-button {
    cursor: pointer;
    opacity: 0.6;
}

@media (hover: hover) {
    #pause-resume-button {
        /* for hover effects */
        transition: 0.3s;
    }
    #pause-resume-button:hover {
        opacity: 1;
    }
}

#pause-resume-button::before {
    content: "pause_circle_filled";
    color: var(--selected-color);
}

#pause-resume-button.material-icons.paused::before {
    content: "play_circle_filled";
    color: var(--digit-color);
}
/* dark mode pause-resume-button */
.sudoku-solver.dark #pause-resume-button::before {
    color: var(--digit-color-dark);
}
.sudoku-solver.dark #pause-resume-button.material-icons.paused::before {
    color: var(--icon-color-dark);
}

/* toggle dark mode */
/* toggle button */
#toggle {
    cursor: pointer;
}

#toggle::before {
    content: "dark_mode";
    color: var(--icon-color);
}

.sudoku-solver.dark #toggle::before {
    content: "light_mode";
    color: var(--icon-color-dark);
}

.sudoku-solver {
    height: 100%;
    background-color: var(--bg-color);
}
.sudoku-solver.dark {
    background-color: var(--bg-color-dark);
}